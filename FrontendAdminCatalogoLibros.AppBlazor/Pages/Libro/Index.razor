@page "/libro/index"

@inject HttpClient httpClient
@inject NavigationManager NavigationManager

@*<MudText Typo="Typo.h4" Class="ml">Mantenimiento de Libros</MudText>*@
<h1 class="mant">Mantenimiento de Libros</h1>

<MudTable Items="@libros" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudFab id="nuevo" Color="Color.Info" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>IdAutor</MudTh>
        <MudTh>IdCategoria</MudTh>
        <MudTh>IdGenero</MudTh>
        <MudTh>Nombre</MudTh>
      @* <MudTh>Descripción</MudTh>*@
        <MudTh>Acciones</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Autor">@context.Autor.Nombre</MudTd>
        <MudTd DataLabel="Categoria">@context.Categoria.Nombre</MudTd>
         <MudTd DataLabel="Genero">@context.Genero.Nombre</MudTd>
         <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
       @* <MudTd DataLabel="Descripcion">@context.Descripcion</MudTd>*@

        <MudTd>
            <MudButton id="editar" Link="@($"/libro/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Dark"
                       Class="text-center">Editar</MudButton>
            <MudButton id="eliminar" Link="@($"/libro/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Error"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>

    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>


@code{
    private IEnumerable<Libro> libros = new List<Libro>();
    private string searchText = "";
    private Libro libro = new Libro();

    protected override async Task OnInitializedAsync()
    {
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.PostAsJsonAsync("libro/buscar", libro);
        string respString = await httpResponse.Content.ReadAsStringAsync();
        libros = JsonSerializer.Deserialize<IEnumerable<Libro>>(respString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        NavigationManager.NavigateTo("libro/agregar");
    }
}
@*<style>
    .mud-fab{
        background:blue;
        color:white;       
    }
    .mud-fab:hover{
         background:white;
        color:blue; 
    }
</style>*@

@*<style>
     .mud-button{
        background:yellow;
        color:#fff;
        height:35px;
        width:6px;
        border-color:black;
        border-radius:6px;
        margin-top:25px;
    }
</style>*@
<style>
    h1{
       text-align:center;
    }
    #nuevo{
        background-color:#252850;
    }
    #nuevo:hover{
         background-color:white;
         color:#252850;
         border:2px solid rgba(0, 0, 0, 0.9);
    }
    #editar{
        background-color:blue;
        color:white;
        border:2px solid blue;
    }
    #editar:hover{
        background-color: white;
        color:blue;
    }
     #eliminar{
         background-color:red;
        color:white;
        border:2px solid red;
    }
    #eliminar:hover{
        background-color:white;
        color:red;
    }
</style>